---
title: "HW 01"
author: "Joey Garcia"
format: html
  html:
    embed-resources: true
toc: true
---

## 0 - Setup

```{r setup}
if (!require("pacman")) 
  install.packages("pacman")

# use this line for installing/loading
# pacman::p_load() 

devtools::install_github("tidyverse/dsbox")

library('tidyverse')
library('lubridate')
library('glue')
library('scales')
library('dplyr')
library('ggthemes')

# set theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))

# set width of code output
options(width = 65)

# set figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 7,        # 7" width
  fig.asp = 0.618,      # the golden ratio
  fig.retina = 3,       # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 300             # higher dpi, sharper image
)

```

## 1 - Road traffic accidents in Edinburgh

```{r Traffic accidents import and data glimpse}

accidents <- read.csv("data/accidents.csv")

glimpse(accidents)

unique(accidents$day_of_week)
unique(accidents$severity)


```

```{r Accidents thoughout a day "density plot"}

# Identify weekends and weekday & convert time into numerical values
accidents <- accidents |>
  mutate(
    # Identify Weekends
    in_weekend = case_when(
      day_of_week %in% c('Saturday', 'Sunday') ~ 1,
      TRUE ~ 0
    ),
    day_type = if_else(in_weekend == 1, "Weekend", "Weekday"), 
    
    # Convert time into a numerical value for density plot
    time_parsed = parse_date_time(time, orders = 'HMS'), # parse by Hour:Min:Sec
    time_decimal = hour(time_parsed) + minute(time_parsed) / 60 + second(time_parsed) / 3600
  )

# Density plot of accident severity throughout a day
accidents |>
  ggplot(aes(x=time_decimal, fill = severity)) +
  geom_density(alpha= 0.6) +
  facet_wrap(~day_type, ncol = 1) +
  scale_x_continuous(breaks = seq(0, 24, by = 2)) +
  scale_color_colorblind() +
  labs(
    x = "Time of day (Hours)",
    y = "Density",
    color = NULL, linetype = NULL,
    title = "Number of accidents throughout the day",
    subtitle = "By day of week and severity"
    ) +
  theme_minimal()

```

## 2 - NYC marathon winners

```{r NYC Marthon winner import and data wrangling}

marathon <- read.csv('data/nyc_marathon.csv')
glimpse(marathon)

sum(is.na(marathon$time)) # counts NA rows

marathon <- marathon |>
  drop_na(time_hrs, )
glimpse(marathon)

summary(marathon)

```

### (A)

In the histogram, it's apparent that there are 2 major inflection points in the dataset, this difference us what separates the times between the Men and Women divisions. In the boxplot, we are able to see the median value and outliers of the dataset.

```{r NYC Marthon winner histogram}



marathon |>
  ggplot(aes(x=time_hrs)) +
  geom_histogram(binwidth = 0.1, fill='cornsilk2') +
  labs(
    x= 'Finish Time (Hours)', 
    y= 'Count',
    title = 'Marathon Finish Times', 
    subtitle = 'Histogram of all divisions'
  ) +
  theme_minimal()
```

```{r NYC Marthon winner boxplot}

marathon |>
  ggplot(aes(y=time_hrs)) +
  geom_boxplot(alpha=0.6, fill='skyblue') +
  labs(
    y= 'Finish Time (Hours)',
    title = 'Marathon Finish Times', 
    subtitle = 'Boxplot of all divisions'
  ) +
  theme_minimal()

```

### (B)

When comparing the Men and Women divisions, we can see that the medians of the boxplots are more distinct. There is less variation of time in each boxplot as well. The Men division has a faster average marathon time than the woman division.

```{r NYC Marthon winner boxplot of Men and Women Divisions}

marathon |>
  ggplot(aes(y=time_hrs, fill = division)) +
  geom_boxplot(alpha=0.6) +
  facet_wrap(~ division) +
  scale_fill_manual(values = c("Men" = "skyblue", "Women" = "cornsilk4")) +
  labs(
    y= 'Finish Time (Hours)',
    title = 'Marathon Finish Times', 
    subtitle = 'Boxplots of Men and Women division', 
    fill = 'Division'
  ) +
  theme_minimal()

```

### (C)

In themes, we are able to remove the legend and the x axis markers. The legend is removed because the boxplot title is more than sufficient for clearly representing the boxplot. The x-axis doesn't have graphical significance in portraying our message of the boxplot.

```{r NYC Marthon winner boxplot of Men and Women Divisions (improved data:ink ratio)}

marathon |>
  ggplot(aes(y=time_hrs, fill = division)) +
  geom_boxplot(alpha=0.6) +
  facet_wrap(~ division) +
  scale_fill_manual(values = c("Men" = "skyblue", "Women" = "cornsilk4")) +
  labs(
    y= 'Finish Time (Hours)',
    title = 'Marathon Finish Times', 
    subtitle = 'Boxplots of Men and Women division', 
    fill = 'Division'
  ) +
  theme_minimal() + 
  theme(
    legend.position = "none",
    axis.title.x = element_blank(),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank()
  )

```

### (D)

In this line plot, we are able to see the disparity in the two divisions. We are able to visually see a negative trend indicating that over time the two divisions are finishing the marathon faster.

```{r Time-Series Marathon Finish Times}

marathon |>
  ggplot(aes(x= year, y= time_hrs, colour = division)) +
  geom_line() +
  geom_point(aes(shape= division), size= 2, alpha= 0.6) +
  scale_color_manual(values = c("Men" = "skyblue", "Women" = "cornsilk4")) +
  labs(
    x= 'Year',
    y= 'Finish Time (Hours)',
    title = 'Marathon Finish Times', 
    subtitle = 'Time-series of Men and Women division'
  ) +
  theme_minimal() 

```

## 3 - US counties

```{r label-me-2}

```

## 4 - Rental apartments in SF

```{r label-me-2}

```

## 5 - Napoleonâ€™s march.

```{r label-me-2}

```
